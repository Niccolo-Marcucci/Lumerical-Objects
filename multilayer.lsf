# This file creates a structure group with the multilayer and the substrate
# The multilayer design will be determined by one vector of containg the refractive index 
# of each layer and another one contanig the thickness of each layer.
deleteall;
addstructuregroup;
set('name','multilayer');
set('x',0);
set('y',0);
set('z',0);
    adduserprop('substrate index',0,1.5);
    adduserprop('substrate thickness',2,1e-6);
    adduserprop('H index',0,3+1i*1e-4);             # high refreactive index layer
    adduserprop('H thickness',2,0.1e-6);
    adduserprop('L index',0,2+1i*1e-5);           # low refreactive index layer
    adduserprop('L thickness',2,0.1e-6);
    adduserprop('N layer couples',0,10);
    adduserprop('first layer type',0,1);    # refractive index of the first and 
    adduserprop('last layer type',0,1);     # last layers. 0 for low, 1 for high refractive index
    adduserprop('last layer thickness',2,0.05e-6);
    adduserprop('domain size',2,1e-6);          # horizontal domain size
    adduserprop('rm absorption in deep layers',2,1e-6);
    
    myscript= " 
        deleteall;
        
        n_sub =      %substrate index%;
        l_sub =      %substrate thickness%;
        l_last =     %last layer thickness%;
        XY =         %domain size%;
        
        N =          %N layer couples%;
        type_first = %first layer type%;       # 0 if multilayer starts with low index, 1 else
        type_last =  %last layer type%;        # 0 if multilayer ends with low index, 1 else
        
        rm_abs =     %rm absorption in deep layers%;      # if 1, the complex part of the refractive 
                                                          # index for all layers will be set to 0, except  
                                                          # for the firsts two on top (last couple)
        
        if (type_first) {                      # if type_first is high, then suffix 'a' refers to high refractive index
            n_a = %H index%;
            n_b = %L index%;
            l_a = %H thickness%;
            l_b = %L thickness%;
        } else {
            n_a = %L index%;
            n_b = %H index%;
            l_a = %L thickness%;
            l_b = %H thickness%;
        }
        
        if (rm_abs) {
            abs_a = imag(n_a);
            ?abs_b = imag(n_b);
            n_a = real(n_a);
            n_b = real(n_b);
        }
        
        l_period = l_a + l_b;
        
        last_isInExcess = (type_first == type_last);     # when true, the total num. of layers is equal to 2*N+1
        
        l_tot = l_sub + l_period*(N-1)+ l_a + l_b*(!last_isInExcess)+ l_a*(last_isInExcess);
        
        addrect;
            set('name','substrate');
            set('x',0);
            set('x span',XY);
            set('y',0);
            set('y span',XY);
            set('z min',-l_tot);
            set('z max',-l_tot+l_sub);
            set('index',n_sub);
            
        for (i=1:N) {
            addrect;
                set('name','A'+num2str(i));
                set('x',0);
                set('x span',XY);
                set('y',0);
                set('y span',XY);
                set('z min',-l_tot+l_sub+(i-1)*l_period);
                set('z max',-l_tot+l_sub+(i-1)*l_period+l_a);
                set('index',n_a);
            addrect;
                set('name','B'+num2str(i));
                set('x',0);
                set('x span',XY);
                set('y',0);
                set('y span',XY);
                set('z min',-l_tot+l_sub+i*l_period-l_b);
                set('z max',-l_tot+l_sub+i*l_period);
                set('index',n_b+1i*abs_b);
        }
        if (last_isInExcess) {
            addrect;
                set('name','A'+num2str(N+1));
                set('x',0);
                set('x span',XY);
                set('y',0);
                set('y span',XY);
                set('z min',-l_tot+l_sub+N*l_period);
                set('z max',-l_tot+l_sub+N*l_period+l_last);
                set('index',n_a+1i*abs_a);
        } else {
            select('A'+num2str(N));
                set('index',n_a+1i*abs_a);
        }            
        
    ";
    
set('script',myscript); 